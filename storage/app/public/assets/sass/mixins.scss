// Create new element and modifier
// With BEM methodology

@mixin e($element){
	&__#{$element}{
		@content;
	}
}

@mixin m($modifier){
	&--#{$modifier}{
		@content;
	}
}

@mixin c($class){
	&.#{$class}{
		@content;
	}
}

// Gradient
@mixin gradient($first-color, $second-color){
	background: -moz-linear-gradient(-45deg,$first-color 0,$second-color 100%);
    background: -webkit-gradient(linear,left top,right bottom,color-stop(0,$first-color),color-stop(100%,$second-color));
    background: -webkit-linear-gradient(-45deg,$first-color 0,$second-color 100%);
    background: -o-linear-gradient(-45deg,$first-color 0,$second-color 100%);
    background: -ms-linear-gradient(-45deg,$first-color 0,$second-color 100%);
    background: linear-gradient(135deg,$first-color 0,$second-color 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$first-color',endColorstr='$second-color',GradientType=1);
}

// =====================================
// Clearfix mixin
// -------------------------------------
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// Usage
// ------------------------------------
// .container-with-floated-children {
//   @extend %clearfix;
// }
// ====================================

// =====================================
// Quick Gradient
// -------------------------------------

@mixin background-gradient($start-color, $end-color, $orientation) {
    background: $start-color;

    @if $orientation == 'vertical' {
      background: -webkit-linear-gradient(top, $start-color, $end-color);
      background: linear-gradient(to bottom, $start-color, $end-color);
    } @else if $orientation == 'horizontal' {
      background: -webkit-linear-gradient(left, $start-color, $end-color);
      background: linear-gradient(to right, $start-color, $end-color);
    } @else {
      background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
      background: radial-gradient(ellipse at center, $start-color, $end-color);
    }
}

// Usage:
// $start-color, $end-color, $orientation - vertical/horizontal/radial
// ----------------------------------------------
//  .foo {
//     @include background-gradient(red, black, 'vertical');
//   }
//   //Output
//   .foo {
//     background: -webkit-linear-gradient(top, red, black);
//     background: linear-gradient(to bottom, red, black);
// }
// ==================================================
